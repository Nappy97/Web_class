package com.lec.spring.domain;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToOne;

import com.lec.spring.listener.Auditable;

import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NoArgsConstructor;
import lombok.ToString;

@Data
@NoArgsConstructor
@ToString(callSuper = true)
@EqualsAndHashCode(callSuper = true)
@Entity
//@EntityListeners(value = AuditingEntityListener.class)
public class Book extends BaseEntity {
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long id;

	private String name;

	private String category;
	private Long authorId; // null 허용 -> Wrapper 사용
//    private Long publisherId; // null 허용 -> Wrapper 사용

	@OneToOne(mappedBy = "book") // 해당 Entity 의 테이블에선 연관키를 가지지 않는다
	@ToString.Exclude // lombok 의 ToString 배제 (양방향 순환참조 때문)
	private BookReviewInfo bookReviewInfo;

//    @Column(updatable = false)
//    @CreatedDate   // AuditingEntityListener 가 Listener 로 적용시 사용
//    private LocalDateTime createdAt;
//    @LastModifiedDate  // AuditingEntityListener 가 Listener 로 적용시 사용s    
//    private LocalDateTime updatedAt;

//    @PrePersist
//    public void prePersist() {
//        this.createdAt = LocalDateTime.now();
//        this.updatedAt = LocalDateTime.now();
//    }
//   
//    @PreUpdate
//    public void preUpdate() {
//        this.updatedAt = LocalDateTime.now();
//    }
}
