package com.lec.spring.di02;

import com.lec.spring.beans.MessageBean;

/*
	Dependency Injection (DI, 의존주입)
	필요한 객체는 누가 만들어 사용하나?
	
	방법2 : 외부에서 만들어 주입 (injection)
		스프링 특징 의존주입 (Dependenty Injection) 사용
		즉 '외부' 에서 만들어 놓은 것을 가져옴.
*/
public class DIMain02 {
	
	public MessageBean msg;   // 필요한 객체
	
	public void setMsg(MessageBean msg) {
		this.msg = msg;
	}

	public static void main(String[] args) {
		System.out.println("Main 시작");

		DIMain02 app = new DIMain02();
		app.test();
		
		System.out.println("Main 종료");
	}
	
	public void test() {
		// 필요한 MessageBean 객체를
//		msg = new MessageKor();   // 직접 만들어(new) 사용
//		msg.sayHello();
		
		// 나중에 설계 변경된 다른 버젼의 MessageBean 을 사용하려면
		msg = new MessageEng(); // 직접 만들어(new) 사용
		msg.sayHello();
	}
	
	// 문제점! 
	// MessageBean 을 사용하던 (의존하던) 모든 곳에서
	// 코드 수정 + 재컴파일 필요.

}






