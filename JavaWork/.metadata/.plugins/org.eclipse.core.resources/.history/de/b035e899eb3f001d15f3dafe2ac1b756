package com.lec.spring.domain;

import java.time.LocalDateTime;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.NonNull;
import lombok.RequiredArgsConstructor;

@Data
@NoArgsConstructor
@AllArgsConstructor
@RequiredArgsConstructor
@Builder
// 이 객체가 JPA 에서 관리하는 Entity 객체임을 정의
@Entity // javax.persistence.Entity (name = 실제로 저장되는 테이블 이름)
@Table(name = "users" // 이 이름으로 물리적인 테이블 생성
		, indexes = {@Index(columnList = "name")}	// 컬럼에 대한 index생성
		, uniqueConstraints = {@UniqueConstraint(columnNames = {"email"})}	// unique 제약사항
		)
public class User {
	@Id // PK. javax.persistence.Id Entity 는 pk가 반드시 필요없다.
	@GeneratedValue // AI,
	private Long id;

	@NonNull // lombok.NonNull ← import 주의!
	private String name;
	@NonNull
	@Column(unique = true)
	private String email;
	
//	@Column(updatable = false)
	private LocalDateTime createdAt;
	
//	@Column(insertable = false)
	private LocalDateTime updatedAt;

//	@OneToMany(fetch = FetchType.EAGER)
//	private List<Address> addres;

	private String testData;
}
